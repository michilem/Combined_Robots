<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/michael/rbkairos_ws/src/rbkairos_common/rbkairos_description/robots/versions/rbkairos_panda_hand.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="rbkairos">
    <!-- ***************** -->
    <!-- Imported elements -->
    <!-- ***************** -->
    <!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->
    <!-- ***************** -->
    <!-- Imported elements -->
    <!-- ***************** -->
    <!-- First we import all posible elements defined in the urdf.xacro files. All these elements are defined as macro:xacros -->
    <gazebo reference="base_footprint">
        <material>Gazebo/Green</material>
        <plugin name="gazebo_ros_control">
            <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>
    <!-- in kg-->
    <!-- in kg-->
    <!-- source en.wikipedia.org/wiki/List_of_moments_of_inertia-->
    <!-- This file unifies all sensors that can be used on simulation, defined as xacro:macros -->
    <!-- <xacro:macro name="sensor_ultrasonic_a21_gazebo">
    <gazebo reference="${prefix}_link">
			<xacro:if value="${gpu}">
        <xacro:property name="ray_type" value="gpu_ray" />
        <xacro:property name="plugin_lib" value="libgazebo_ros_gpu_laser.so" />
      </xacro:if>
      <xacro:unless value="${gpu}">
        <xacro:property name="ray_type" value="ray" />
        <xacro:property name="plugin_lib" value="libgazebo_ros_laser.so" />
      </xacro:unless>
			<sensor type="${ray_type}" name="${prefix}_sensor">
				<pose>0 0 0 0 0 0</pose>
				<visualize>false</visualize>
				<update_rate>40</update_rate>
				<ray>
					<scan>
						<horizontal>
							<samples>1081</samples>
							<resolution>1</resolution>
							<min_angle>${min_angle}</min_angle>
							<max_angle>${max_angle}</max_angle>
						</horizontal>
					</scan>
					<range>
						<min>0.06</min>
						<max>20.0</max>
						<! resolution>0.004363323</resolution >
						<resolution>0.004359297</resolution>
						<! resolution>0.001</resolution >
					</range>
					<noise>
						<type>gaussian</type>
						<mean>0.0</mean>
						<stddev>0.01</stddev>
					</noise>
				</ray>
				<plugin name="${prefix}_controller" filename="${plugin_lib}">
					<topicName>${prefix_topic}/scan</topicName>
					<frameName>/${prefix}_link</frameName>
				</plugin>
			</sensor>
	</gazebo>
  </xacro:macro>
  -->
    <!-- Includes -->
    <!-- Includes -->
    <!-- source en.wikipedia.org/wiki/List_of_moments_of_inertia-->
    <!-- This file unifies all sensors that can be used on simulation, defined as xacro:macros -->
    <!-- <xacro:macro name="sensor_ultrasonic_a21_gazebo">
    <gazebo reference="${prefix}_link">
			<xacro:if value="${gpu}">
        <xacro:property name="ray_type" value="gpu_ray" />
        <xacro:property name="plugin_lib" value="libgazebo_ros_gpu_laser.so" />
      </xacro:if>
      <xacro:unless value="${gpu}">
        <xacro:property name="ray_type" value="ray" />
        <xacro:property name="plugin_lib" value="libgazebo_ros_laser.so" />
      </xacro:unless>
			<sensor type="${ray_type}" name="${prefix}_sensor">
				<pose>0 0 0 0 0 0</pose>
				<visualize>false</visualize>
				<update_rate>40</update_rate>
				<ray>
					<scan>
						<horizontal>
							<samples>1081</samples>
							<resolution>1</resolution>
							<min_angle>${min_angle}</min_angle>
							<max_angle>${max_angle}</max_angle>
						</horizontal>
					</scan>
					<range>
						<min>0.06</min>
						<max>20.0</max>
						<! resolution>0.004363323</resolution >
						<resolution>0.004359297</resolution>
						<! resolution>0.001</resolution >
					</range>
					<noise>
						<type>gaussian</type>
						<mean>0.0</mean>
						<stddev>0.01</stddev>
					</noise>
				</ray>
				<plugin name="${prefix}_controller" filename="${plugin_lib}">
					<topicName>${prefix_topic}/scan</topicName>
					<frameName>/${prefix}_link</frameName>
				</plugin>
			</sensor>
	</gazebo>
  </xacro:macro>
  -->
    <!-- Includes -->
    <!-- Includes -->
    <!-- *************** -->
    <!-- Robots Elements -->
    <!-- *************** -->
    <!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->
    <!-- *************** -->
    <!-- Robots Elements -->
    <!-- *************** -->
    <!-- Here we create the robot elements using the xacro:macros imported at the beggining of this file -->
    <link name="robot_base_footprint">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <box size="0.001 0.001 0.001" />
            </geometry>
        </visual>
    </link>
    <joint name="robot_base_footprint_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0.127" />
        <!-- ${wheel_radius} property must be defined inside wheel description -->
        <parent link="robot_base_footprint" />
        <child link="robot_base_link" />
    </joint>
    <!-- BASE_LINK -->
    <link name="robot_base_link">
        <inertial>
            <mass value="125.0" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <inertia ixx="1.391" ixy="0.004" ixz="0.0" iyy="6.853" iyz="0.0" izz="6.125" />
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/bases/xls/summit_xls_chassis.stl" />
            </geometry>
            <material name="black">
                <color rgba="0.0 0.0 0.0 1" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 0 " xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/bases/xls/summit_xls_chassis.dae" />
            </geometry>
        </collision>
    </link>
    <gazebo reference="robot_base_link">
        <material>Gazebo/Black</material>
    </gazebo>
    <!-- CHAPAS INOX TAPAS -->
    <link name="robot_base_chapa">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/bases/xls/summit_xls_chapas_inox_tapas.stl" />
            </geometry>
            <material name="darkgrey">
                <color rgba="0.5 0.5 0.5 1" />
            </material>
        </visual>
    </link>
    <joint name="robot_base_tapa_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0.0 0 0.38062" />
        <parent link="robot_base_link" />
        <child link="robot_base_chapa" />
    </joint>
    <!-- LOGO ROBOTNIK IZQUIERDO -->
    <link name="robot_base_logo_left">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/bases/xls/robotnik_logo_chasis.stl" />
            </geometry>
            <material name="darkgrey">
                <color rgba="0.5 0.5 0.5 1" />
            </material>
        </visual>
    </link>
    <joint name="robot_base_logo_left_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0.0 0.28931 0.29062" />
        <parent link="robot_base_link" />
        <child link="robot_base_logo_left" />
    </joint>
    <!-- LOGO ROBOTNIK DERECHO -->
    <link name="robot_base_logo_right">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/bases/xls/robotnik_logo_chasis.stl" />
            </geometry>
            <material name="darkgrey">
                <color rgba="0.5 0.5 0.5 1" />
            </material>
        </visual>
    </link>
    <joint name="robot_base_logo_right_joint" type="fixed">
        <origin rpy="0 0 3.141592653589793" xyz="0.0 -0.28931 0.29062" />
        <parent link="robot_base_link" />
        <child link="robot_base_logo_right" />
    </joint>
    <!-- LOGO ROBOTNIK FRONTAL -->
    <link name="robot_base_logo_front">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/bases/xls/robotnik_logo_chasis.stl" />
            </geometry>
            <material name="darkgrey">
                <color rgba="0.5 0.5 0.5 1" />
            </material>
        </visual>
    </link>
    <joint name="robot_base_logo_front_joint" type="fixed">
        <origin rpy="0 0 -1.5707963267948966" xyz="0.345 0.0 0.0" />
        <parent link="robot_base_link" />
        <child link="robot_base_logo_front" />
    </joint>
    <!-- LOGO ROBOTNIK TRASERO -->
    <link name="robot_base_logo_rear">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/bases/xls/robotnik_logo_chasis.stl" />
            </geometry>
            <material name="darkgrey">
                <color rgba="0.5 0.5 0.5 1" />
            </material>
        </visual>
    </link>
    <joint name="robot_base_logo_rear_joint" type="fixed">
        <origin rpy="0 0 1.5707963267948966" xyz="-0.345 0.0 0.0" />
        <parent link="robot_base_link" />
        <child link="robot_base_logo_rear" />
    </joint>
    <!-- DOCKING CONTACT -->
    <link name="robot_base_docking_contact" />
    <joint name="robot_base_docking_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0.35 0 0.09" />
        <parent link="robot_base_link" />
        <child link="robot_base_docking_contact" />
    </joint>
    <joint name="robot_front_right_wheel_joint" type="continuous">
        <parent link="robot_base_link" />
        <child link="robot_front_right_wheel_link" />
        <origin rpy="0 0 0" xyz="0.2225 -0.2045 0.0" />
        <axis rpy="0 0 0" xyz="0 1 0" />
        <limit effort="100" velocity="100" />
        <joint_properties damping="0.0" friction="0.0" />
    </joint>
    <link name="robot_front_right_wheel_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/wheels/omni_wheel_2.dae" />
            </geometry>
            <material name="darkgrey">
                <color rgba="0.2 0.2 0.2 1" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.570796326795 0 0" xyz="0 0 0" />
            <geometry>
                <!--sphere radius="${omni_wheel_radius}" /-->
                <!--
          <xacro:if value="${reflect}">
              <mesh filename="package://summit_xl_description/meshes/wheels/omni_wheel_1.dae" />
          </xacro:if>
          <xacro:unless value="${reflect}">
              <mesh filename="package://summit_xl_description/meshes/wheels/omni_wheel_2.dae" />
					</xacro:unless>
-->
                <cylinder length="0.087" radius="0.127" />
                <!-- sphere radius="${omni_wheel_radius}"/-->
            </geometry>
        </collision>
        <inertial>
            <mass value="6.5" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <inertia ixx="0.0303095" ixy="0" ixz="0" iyy="0.05241925" iyz="0" izz="0.0303095" />
        </inertial>
    </link>
    <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
    <transmission name="robot_front_right_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="robot_front_right_wheel_joint">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="robot_front_right_wheel_joint_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="robot_front_right_wheel_link">
        <mu1 value="0.0" />
        <mu2 value="0.0" />
        <kp value="10000000.0" />
        <kd value="1.0" />
        <fdir1 value="1 0 0" />
        <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <joint name="robot_front_left_wheel_joint" type="continuous">
        <parent link="robot_base_link" />
        <child link="robot_front_left_wheel_link" />
        <origin rpy="0 0 0" xyz="0.2225 0.2045 0.0" />
        <axis rpy="0 0 0" xyz="0 1 0" />
        <limit effort="100" velocity="100" />
        <joint_properties damping="0.0" friction="0.0" />
    </joint>
    <link name="robot_front_left_wheel_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/wheels/omni_wheel_1.dae" />
            </geometry>
            <material name="darkgrey">
                <color rgba="0.2 0.2 0.2 1" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.570796326795 0 0" xyz="0 0 0" />
            <geometry>
                <!--sphere radius="${omni_wheel_radius}" /-->
                <!--
          <xacro:if value="${reflect}">
              <mesh filename="package://summit_xl_description/meshes/wheels/omni_wheel_1.dae" />
          </xacro:if>
          <xacro:unless value="${reflect}">
              <mesh filename="package://summit_xl_description/meshes/wheels/omni_wheel_2.dae" />
					</xacro:unless>
-->
                <cylinder length="0.087" radius="0.127" />
                <!-- sphere radius="${omni_wheel_radius}"/-->
            </geometry>
        </collision>
        <inertial>
            <mass value="6.5" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <inertia ixx="0.0303095" ixy="0" ixz="0" iyy="0.05241925" iyz="0" izz="0.0303095" />
        </inertial>
    </link>
    <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
    <transmission name="robot_front_left_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="robot_front_left_wheel_joint">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="robot_front_left_wheel_joint_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="robot_front_left_wheel_link">
        <mu1 value="0.0" />
        <mu2 value="0.0" />
        <kp value="10000000.0" />
        <kd value="1.0" />
        <fdir1 value="1 0 0" />
        <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <joint name="robot_back_left_wheel_joint" type="continuous">
        <parent link="robot_base_link" />
        <child link="robot_back_left_wheel_link" />
        <origin rpy="0 0 0" xyz="-0.2225 0.2045 0.0" />
        <axis rpy="0 0 0" xyz="0 1 0" />
        <limit effort="100" velocity="100" />
        <joint_properties damping="0.0" friction="0.0" />
    </joint>
    <link name="robot_back_left_wheel_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/wheels/omni_wheel_1.dae" />
            </geometry>
            <material name="darkgrey">
                <color rgba="0.2 0.2 0.2 1" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.570796326795 0 0" xyz="0 0 0" />
            <geometry>
                <!--sphere radius="${omni_wheel_radius}" /-->
                <!--
          <xacro:if value="${reflect}">
              <mesh filename="package://summit_xl_description/meshes/wheels/omni_wheel_1.dae" />
          </xacro:if>
          <xacro:unless value="${reflect}">
              <mesh filename="package://summit_xl_description/meshes/wheels/omni_wheel_2.dae" />
					</xacro:unless>
-->
                <cylinder length="0.087" radius="0.127" />
                <!-- sphere radius="${omni_wheel_radius}"/-->
            </geometry>
        </collision>
        <inertial>
            <mass value="6.5" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <inertia ixx="0.0303095" ixy="0" ixz="0" iyy="0.05241925" iyz="0" izz="0.0303095" />
        </inertial>
    </link>
    <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
    <transmission name="robot_back_left_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="robot_back_left_wheel_joint">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="robot_back_left_wheel_joint_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="robot_back_left_wheel_link">
        <mu1 value="0.0" />
        <mu2 value="0.0" />
        <kp value="10000000.0" />
        <kd value="1.0" />
        <fdir1 value="1 0 0" />
        <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <joint name="robot_back_right_wheel_joint" type="continuous">
        <parent link="robot_base_link" />
        <child link="robot_back_right_wheel_link" />
        <origin rpy="0 0 0" xyz="-0.2225 -0.2045 0.0" />
        <axis rpy="0 0 0" xyz="0 1 0" />
        <limit effort="100" velocity="100" />
        <joint_properties damping="0.0" friction="0.0" />
    </joint>
    <link name="robot_back_right_wheel_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://summit_xl_description/meshes/wheels/omni_wheel_2.dae" />
            </geometry>
            <material name="darkgrey">
                <color rgba="0.2 0.2 0.2 1" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.570796326795 0 0" xyz="0 0 0" />
            <geometry>
                <!--sphere radius="${omni_wheel_radius}" /-->
                <!--
          <xacro:if value="${reflect}">
              <mesh filename="package://summit_xl_description/meshes/wheels/omni_wheel_1.dae" />
          </xacro:if>
          <xacro:unless value="${reflect}">
              <mesh filename="package://summit_xl_description/meshes/wheels/omni_wheel_2.dae" />
					</xacro:unless>
-->
                <cylinder length="0.087" radius="0.127" />
                <!-- sphere radius="${omni_wheel_radius}"/-->
            </geometry>
        </collision>
        <inertial>
            <mass value="6.5" />
            <origin xyz="0 0 0" rpy="0 0 0" />
            <inertia ixx="0.0303095" ixy="0" ixz="0" iyy="0.05241925" iyz="0" izz="0.0303095" />
        </inertial>
    </link>
    <!-- Transmission is important to link the joints and the controller (see summit_xl_control/config/summit_xl_control.yaml)-->
    <transmission name="robot_back_right_wheel_joint_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="robot_back_right_wheel_joint">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="robot_back_right_wheel_joint_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="robot_back_right_wheel_link">
        <mu1 value="0.0" />
        <mu2 value="0.0" />
        <kp value="10000000.0" />
        <kd value="1.0" />
        <fdir1 value="1 0 0" />
        <turnGravityOff>false</turnGravityOff>
    </gazebo>
    <joint name="robot_imu_joint" type="fixed">
        <axis xyz="1 0 0" />
        <!--origin xyz="0 0 0.2825"/-->
        <origin rpy="0 0 0" xyz="0.127 -0.129 0.212" />
        <parent link="robot_base_link" />
        <child link="robot_imu_link" />
    </joint>
    <link name="robot_imu_link">
        <inertial>
            <origin rpy="0 0 0" xyz="0.0 0 0.01" />
            <mass value="0.05" />
            <inertia ixx="3.3333333333333337e-06" ixy="0" ixz="0" iyy="3.3333333333333337e-06" iyz="0" izz="3.3333333333333337e-06" />
        </inertial>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <box size="0.001 0.001 0.001" />
            </geometry>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <box size=".001 .001 .001" />
            </geometry>
        </collision>
    </link>
    <gazebo>
        <plugin filename="libhector_gazebo_ros_imu.so" name="robot_imu_controller">
            <alwaysOn>true</alwaysOn>
            <topicName>imu/data</topicName>
            <serviceName>robot_imuimu/service</serviceName>
            <bodyName>robot_imu_link</bodyName>
            <frameId>robot_imu_link</frameId>
            <updateRate>50.0</updateRate>
            <gaussianNoise>0.00</gaussianNoise>
            <yawOffset>0.0</yawOffset>
            <yawDrift>0.0</yawDrift>
            <yawGaussianNoise>0.0</yawGaussianNoise>
            <!-- angular velocities parameters -->
            <rateOffset>0.0 0.0 0.0</rateOffset>
            <rateDrift>0.0 0.0 0.0</rateDrift>
            <rateGaussianNoise>0.0 0.0 0.0</rateGaussianNoise>
            <!-- linear accelerations parameters -->
            <accelOffset>0.0 0.0 0.0</accelOffset>
            <accelDrift>0.0 0.0 0.0</accelDrift>
            <accelGaussianNoise>0.0 0.0 0.0</accelGaussianNoise>
        </plugin>
    </gazebo>
    <joint name="robot_front_laser_base_joint" type="fixed">
        <origin rpy="0 -3.14159265359 2.3561944901925003" xyz="0.2865 -0.20894 0.2973" />
        <parent link="robot_base_link" />
        <child link="robot_front_laser_base_link" />
        <limit effort="100" lower="0.0" upper="0.0" velocity="100" />
    </joint>
    <link name="robot_front_laser_base_link">
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <!--<box size="0.106 0.094 0.152"/>-->
                <!--<cylinder radius="0.058" length="0.152"/>-->
                <mesh filename="package://robotnik_sensors/meshes/sick_s300.dae" />
            </geometry>
        </collision>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://robotnik_sensors/meshes/sick_s300.dae" />
            </geometry>
        </visual>
        <!--inertial>
			<mass value="1e-5" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial-->
        <inertial>
            <mass value="1.2" />
            <origin rpy="0 0 0" xyz="0 0.0 0.0751" />
            <inertia ixx="0.0034339999999999996" ixy="0" ixz="0" iyy="0.0033507999999999993" iyz="0" izz="0.0021639999999999997" />
            <!--inertia ixx="0.0002708333" ixy="0" ixz="0" iyy="0.0002708333" iyz="0" izz="0.00009434" /-->
        </inertial>
    </link>
    <joint name="robot_front_laser_joint" type="fixed">
        <parent link="robot_front_laser_base_link" />
        <child link="robot_front_laser_link" />
        <origin rpy="0 0 0" xyz="0.0 0 0.116" />
    </joint>
    <link name="robot_front_laser_link" />
    <gazebo reference="robot_front_laser_link">
        <sensor name="robot_front_laser_sensor" type="ray">
            <pose>0 0 0 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>12.5</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>541</samples>
                        <resolution>1</resolution>
                        <min_angle>-2.3562</min_angle>
                        <max_angle>2.3562</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.10</min>
                    <max>30.0</max>
                    <resolution>0.03</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.03</stddev>
                </noise>
            </ray>
            <plugin filename="libgazebo_ros_laser.so" name="robot_front_laser_controller">
                <topicName>front_laser/scan</topicName>
                <frameName>/robot_front_laser_link</frameName>
                <!-- if not global (leading /) sets the current namespace as a prefix (/ns/name_laser_link) -->
            </plugin>
        </sensor>
    </gazebo>
    <joint name="robot_rear_laser_base_joint" type="fixed">
        <origin rpy="0 -3.14159265359 -0.7853981633975" xyz="-0.2865 0.20894 0.2973" />
        <parent link="robot_base_link" />
        <child link="robot_rear_laser_base_link" />
        <limit effort="100" lower="0.0" upper="0.0" velocity="100" />
    </joint>
    <link name="robot_rear_laser_base_link">
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <!--<box size="0.106 0.094 0.152"/>-->
                <!--<cylinder radius="0.058" length="0.152"/>-->
                <mesh filename="package://robotnik_sensors/meshes/sick_s300.dae" />
            </geometry>
        </collision>
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://robotnik_sensors/meshes/sick_s300.dae" />
            </geometry>
        </visual>
        <!--inertial>
			<mass value="1e-5" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial-->
        <inertial>
            <mass value="1.2" />
            <origin rpy="0 0 0" xyz="0 0.0 0.0751" />
            <inertia ixx="0.0034339999999999996" ixy="0" ixz="0" iyy="0.0033507999999999993" iyz="0" izz="0.0021639999999999997" />
            <!--inertia ixx="0.0002708333" ixy="0" ixz="0" iyy="0.0002708333" iyz="0" izz="0.00009434" /-->
        </inertial>
    </link>
    <joint name="robot_rear_laser_joint" type="fixed">
        <parent link="robot_rear_laser_base_link" />
        <child link="robot_rear_laser_link" />
        <origin rpy="0 0 0" xyz="0.0 0 0.116" />
    </joint>
    <link name="robot_rear_laser_link" />
    <gazebo reference="robot_rear_laser_link">
        <sensor name="robot_rear_laser_sensor" type="ray">
            <pose>0 0 0 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>12.5</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>541</samples>
                        <resolution>1</resolution>
                        <min_angle>-2.3562</min_angle>
                        <max_angle>2.3562</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.10</min>
                    <max>30.0</max>
                    <resolution>0.03</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.03</stddev>
                </noise>
            </ray>
            <plugin filename="libgazebo_ros_laser.so" name="robot_rear_laser_controller">
                <topicName>rear_laser/scan</topicName>
                <frameName>/robot_rear_laser_link</frameName>
                <!-- if not global (leading /) sets the current namespace as a prefix (/ns/name_laser_link) -->
            </plugin>
        </sensor>
    </gazebo>
    <joint name="robot_front_rgbd_camera_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0.3585 0.0 0.25062" />
        <parent link="robot_base_link" />
        <child link="robot_front_rgbd_camera_link" />
    </joint>
    <link name="robot_front_rgbd_camera_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://robotnik_sensors/meshes/orbbec_astra.dae" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://robotnik_sensors/meshes/orbbec_astra.dae" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.001" />
            <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
            <inertia ixx="2.3437500000000006e-06" ixy="0" ixz="0" iyy="2.0833333333333336e-07" iyz="0" izz="2.4020833333333336e-06" />
        </inertial>
    </link>
    <joint name="robot_front_rgbd_camera_rgb_joint" type="fixed">
        <origin rpy="0.0 0.0 0.0" xyz="0.0 0.0125 0.0150" />
        <parent link="robot_front_rgbd_camera_link" />
        <child link="robot_front_rgbd_camera_rgb_frame" />
    </joint>
    <link name="robot_front_rgbd_camera_rgb_frame">
        <inertial>
            <mass value="0.297" />
            <origin xyz="-0.02 -0.0125 0.0" />
            <inertia ixx="0.0006960937500000001" ixy="0" ixz="0" iyy="6.1875e-05" iyz="0" izz="0.00071341875" />
        </inertial>
    </link>
    <joint name="robot_front_rgbd_camera_rgb_optical_joint" type="fixed">
        <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0.0 0.0 0.0" />
        <parent link="robot_front_rgbd_camera_rgb_frame" />
        <child link="robot_front_rgbd_camera_rgb_optical_frame" />
    </joint>
    <link name="robot_front_rgbd_camera_rgb_optical_frame">
        <inertial>
            <mass value="0.001" />
            <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0 0 0" />
            <inertia ixx="2.3437500000000006e-06" ixy="0" ixz="0" iyy="2.0833333333333336e-07" iyz="0" izz="2.4020833333333336e-06" />
        </inertial>
    </link>
    <joint name="robot_front_rgbd_camera_depth_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0.0 0.0375 0.0150" />
        <parent link="robot_front_rgbd_camera_link" />
        <child link="robot_front_rgbd_camera_depth_frame" />
    </joint>
    <link name="robot_front_rgbd_camera_depth_frame">
        <inertial>
            <mass value="0.001" />
            <origin xyz="0 0 0" />
            <inertia ixx="2.3437500000000006e-06" ixy="0" ixz="0" iyy="2.0833333333333336e-07" iyz="0" izz="2.4020833333333336e-06" />
        </inertial>
    </link>
    <joint name="robot_front_rgbd_camera_depth_optical_joint" type="fixed">
        <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0" />
        <parent link="robot_front_rgbd_camera_depth_frame" />
        <child link="robot_front_rgbd_camera_depth_optical_frame" />
    </joint>
    <link name="robot_front_rgbd_camera_depth_optical_frame">
        <inertial>
            <mass value="0.001" />
            <origin xyz="0 0 0" />
            <inertia ixx="2.3437500000000006e-06" ixy="0" ixz="0" iyy="2.0833333333333336e-07" iyz="0" izz="2.4020833333333336e-06" />
        </inertial>
    </link>
    <gazebo reference="robot_front_rgbd_camera_link">
        <sensor name="robot_front_rgbd_camera_depth_sensor" type="depth">
            <always_on>true</always_on>
            <update_rate>20.0</update_rate>
            <camera>
                <horizontal_fov>1.0471975511965976</horizontal_fov>
                <image>
                    <format>R8G8B8</format>
                    <width>640</width>
                    <height>480</height>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>3.5</far>
                </clip>
            </camera>
            <plugin filename="libgazebo_ros_openni_kinect.so" name="robot_front_rgbd_camera_controller">
                <cameraName>front_rgbd_camera</cameraName>
                <alwaysOn>true</alwaysOn>
                <updateRate>10</updateRate>
                <imageTopicName>rgb/image_raw</imageTopicName>
                <depthImageTopicName>depth/image_raw</depthImageTopicName>
                <pointCloudTopicName>depth/points</pointCloudTopicName>
                <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
                <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
                <frameName>/robot_front_rgbd_camera_depth_optical_frame</frameName>
                <baseline>0.1</baseline>
                <distortion_k1>0.0</distortion_k1>
                <distortion_k2>0.0</distortion_k2>
                <distortion_k3>0.0</distortion_k3>
                <distortion_t1>0.0</distortion_t1>
                <distortion_t2>0.0</distortion_t2>
                <pointCloudCutoff>0.4</pointCloudCutoff>
            </plugin>
        </sensor>
    </gazebo>
    <!-- PANDA ARM -->
    <!--
    <xacro:franka_robot arm_id="panda"
                        joint_limits="${xacro.load_yaml('$(find franka_description)/robots/panda/joint_limits.yaml')}">
    </xacro:franka_robot>

    <joint name="$(arg prefix)arm_base_joint" type="fixed">
      <origin xyz="${arm_position_x} ${arm_position_y} ${arm_position_z}" rpy="${arm_orientation_r} ${arm_orientation_p} ${arm_orientation_y}"/>
      <parent link="$(arg prefix)base_link" />
      <child link="panda_link0" />
    </joint>
    -->
    <joint name="panda_joint_robot_base_link" type="fixed">
        <parent link="robot_base_link" />
        <child link="panda_link0" />
        <origin rpy="0 0 3.141592653589793" xyz="0.1883 0 0.38212" />
    </joint>
    <!-- sub-link defining detailed meshes for collision with environment -->
    <link name="panda_link0">
        <visual>
            <geometry>
                <mesh filename="package://franka_description/meshes/visual/link0.dae" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://franka_description/meshes/collision/link0.stl" />
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="-0.041018 -0.00014 0.049974" />
            <mass value="0.629769" />
            <inertia ixx="0.00315" ixy="8.2904e-07" ixz="0.00015" iyy="0.00388" iyz="8.2299e-06" izz="0.004285" />
        </inertial>
    </link>
    <!-- sub-link defining coarse geometries of real robot's internal self-collision -->
    <link name="panda_link0_sc" />
    <!-- fixed joint between both sub-links -->
    <joint name="panda_link0_sc_joint" type="fixed">
        <origin rpy="0 0 0" />
        <parent link="panda_link0" />
        <child link="panda_link0_sc" />
    </joint>
    <!-- sub-link defining detailed meshes for collision with environment -->
    <link name="panda_link1">
        <visual>
            <geometry>
                <mesh filename="package://franka_description/meshes/visual/link1.dae" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://franka_description/meshes/collision/link1.stl" />
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="0.003875 0.002081 -0.04762" />
            <mass value="4.970684" />
            <inertia ixx="0.70337" ixy="-0.000139" ixz="0.006772" iyy="0.70661" iyz="0.019169" izz="0.009117" />
        </inertial>
    </link>
    <!-- sub-link defining coarse geometries of real robot's internal self-collision -->
    <link name="panda_link1_sc" />
    <!-- fixed joint between both sub-links -->
    <joint name="panda_link1_sc_joint" type="fixed">
        <origin rpy="0 0 0" />
        <parent link="panda_link1" />
        <child link="panda_link1_sc" />
    </joint>
    <joint name="panda_joint1" type="revolute">
        <origin rpy="0 0 0" xyz="0 0 0.333" />
        <parent link="panda_link0" />
        <child link="panda_link1" />
        <axis xyz="0 0 1" />
        <limit effort="87.0" lower="-2.8973" upper="2.8973" velocity="2.175" />
        <safety_controller k_position="100.0" k_velocity="40.0" soft_lower_limit="-2.8973" soft_upper_limit="2.8973" />
        <dynamics D="1" K="7000" damping="0.003" friction="0.0" mu_coulomb="0" mu_viscous="16" />
    </joint>
    <!-- sub-link defining detailed meshes for collision with environment -->
    <link name="panda_link2">
        <visual>
            <geometry>
                <mesh filename="package://franka_description/meshes/visual/link2.dae" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://franka_description/meshes/collision/link2.stl" />
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="-0.003141 -0.02872  0.003495" />
            <mass value="0.646926" />
            <inertia ixx="0.007962" ixy="-0.003925" ixz="0.010254" iyy="0.02811" iyz="0.000704" izz="0.025995" />
        </inertial>
    </link>
    <!-- sub-link defining coarse geometries of real robot's internal self-collision -->
    <link name="panda_link2_sc" />
    <!-- fixed joint between both sub-links -->
    <joint name="panda_link2_sc_joint" type="fixed">
        <origin rpy="0 0 0" />
        <parent link="panda_link2" />
        <child link="panda_link2_sc" />
    </joint>
    <joint name="panda_joint2" type="revolute">
        <origin rpy="-1.5707963267948966 0 0" xyz="0 0 0" />
        <parent link="panda_link1" />
        <child link="panda_link2" />
        <axis xyz="0 0 1" />
        <limit effort="87.0" lower="-1.7628" upper="1.7628" velocity="2.175" />
        <safety_controller k_position="100.0" k_velocity="40.0" soft_lower_limit="-1.7628" soft_upper_limit="1.7628" />
        <dynamics D="1" K="7000" damping="0.003" friction="0.0" mu_coulomb="0" mu_viscous="16" />
    </joint>
    <!-- sub-link defining detailed meshes for collision with environment -->
    <link name="panda_link3">
        <visual>
            <geometry>
                <mesh filename="package://franka_description/meshes/visual/link3.dae" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://franka_description/meshes/collision/link3.stl" />
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="2.7518e-02 3.9252e-02 -6.6502e-02" />
            <mass value="3.228604" />
            <inertia ixx="0.037242" ixy="-0.004761" ixz="-0.011396" iyy="0.036155" iyz="-0.012805" izz="0.01083" />
        </inertial>
    </link>
    <!-- sub-link defining coarse geometries of real robot's internal self-collision -->
    <link name="panda_link3_sc" />
    <!-- fixed joint between both sub-links -->
    <joint name="panda_link3_sc_joint" type="fixed">
        <origin rpy="0 0 0" />
        <parent link="panda_link3" />
        <child link="panda_link3_sc" />
    </joint>
    <joint name="panda_joint3" type="revolute">
        <origin rpy="1.5707963267948966 0 0" xyz="0 -0.316 0" />
        <parent link="panda_link2" />
        <child link="panda_link3" />
        <axis xyz="0 0 1" />
        <limit effort="87.0" lower="-2.8973" upper="2.8973" velocity="2.175" />
        <safety_controller k_position="100.0" k_velocity="40.0" soft_lower_limit="-2.8973" soft_upper_limit="2.8973" />
        <dynamics D="1" K="7000" damping="0.003" friction="0.0" mu_coulomb="0" mu_viscous="16" />
    </joint>
    <!-- sub-link defining detailed meshes for collision with environment -->
    <link name="panda_link4">
        <visual>
            <geometry>
                <mesh filename="package://franka_description/meshes/visual/link4.dae" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://franka_description/meshes/collision/link4.stl" />
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="-5.317e-02 1.04419e-01 2.7454e-02" />
            <mass value="3.587895" />
            <inertia ixx="0.025853" ixy="0.007796" ixz="-0.001332" iyy="0.019552" iyz="0.008641" izz="0.028323" />
        </inertial>
    </link>
    <!-- sub-link defining coarse geometries of real robot's internal self-collision -->
    <link name="panda_link4_sc" />
    <!-- fixed joint between both sub-links -->
    <joint name="panda_link4_sc_joint" type="fixed">
        <origin rpy="0 0 0" />
        <parent link="panda_link4" />
        <child link="panda_link4_sc" />
    </joint>
    <joint name="panda_joint4" type="revolute">
        <origin rpy="1.5707963267948966 0 0" xyz="0.0825 0 0" />
        <parent link="panda_link3" />
        <child link="panda_link4" />
        <axis xyz="0 0 1" />
        <limit effort="87.0" lower="-3.0718" upper="-0.0698" velocity="2.175" />
        <safety_controller k_position="100.0" k_velocity="40.0" soft_lower_limit="-3.0718" soft_upper_limit="-0.0698" />
        <dynamics D="1" K="7000" damping="0.003" friction="0.0" mu_coulomb="0" mu_viscous="16" />
    </joint>
    <!-- sub-link defining detailed meshes for collision with environment -->
    <link name="panda_link5">
        <visual>
            <geometry>
                <mesh filename="package://franka_description/meshes/visual/link5.dae" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://franka_description/meshes/collision/link5.stl" />
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="-1.1953e-02 4.1065e-02 -3.8437e-02" />
            <mass value="1.225946" />
            <inertia ixx="0.035549" ixy="-0.002117" ixz="-0.004037" iyy="0.029474" iyz="0.000229" izz="0.008627" />
        </inertial>
    </link>
    <!-- sub-link defining coarse geometries of real robot's internal self-collision -->
    <link name="panda_link5_sc" />
    <!-- fixed joint between both sub-links -->
    <joint name="panda_link5_sc_joint" type="fixed">
        <origin rpy="0 0 0" />
        <parent link="panda_link5" />
        <child link="panda_link5_sc" />
    </joint>
    <joint name="panda_joint5" type="revolute">
        <origin rpy="-1.5707963267948966 0 0" xyz="-0.0825 0.384 0" />
        <parent link="panda_link4" />
        <child link="panda_link5" />
        <axis xyz="0 0 1" />
        <limit effort="12.0" lower="-2.8973" upper="2.8973" velocity="2.61" />
        <safety_controller k_position="100.0" k_velocity="40.0" soft_lower_limit="-2.8973" soft_upper_limit="2.8973" />
        <dynamics D="1" K="7000" damping="0.003" friction="0.0" mu_coulomb="0" mu_viscous="16" />
    </joint>
    <!-- sub-link defining detailed meshes for collision with environment -->
    <link name="panda_link6">
        <visual>
            <geometry>
                <mesh filename="package://franka_description/meshes/visual/link6.dae" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://franka_description/meshes/collision/link6.stl" />
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="6.0149e-02 -1.4117e-02 -1.0517e-02" />
            <mass value="1.666555" />
            <inertia ixx="0.001964" ixy="0.000109" ixz="-0.001158" iyy="0.004354" iyz="0.000341" izz="0.005433" />
        </inertial>
    </link>
    <!-- sub-link defining coarse geometries of real robot's internal self-collision -->
    <link name="panda_link6_sc" />
    <!-- fixed joint between both sub-links -->
    <joint name="panda_link6_sc_joint" type="fixed">
        <origin rpy="0 0 0" />
        <parent link="panda_link6" />
        <child link="panda_link6_sc" />
    </joint>
    <joint name="panda_joint6" type="revolute">
        <origin rpy="1.5707963267948966 0 0" xyz="0 0 0" />
        <parent link="panda_link5" />
        <child link="panda_link6" />
        <axis xyz="0 0 1" />
        <limit effort="12.0" lower="-0.0175" upper="3.7525" velocity="2.61" />
        <safety_controller k_position="100.0" k_velocity="40.0" soft_lower_limit="-0.0175" soft_upper_limit="3.7525" />
        <dynamics D="1" K="7000" damping="0.003" friction="0.0" mu_coulomb="0" mu_viscous="16" />
    </joint>
    <!-- sub-link defining detailed meshes for collision with environment -->
    <link name="panda_link7">
        <visual>
            <geometry>
                <mesh filename="package://franka_description/meshes/visual/link7.dae" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://franka_description/meshes/collision/link7.stl" />
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="1.0517e-02 -4.252e-03 6.1597e-02" />
            <mass value="0.735522" />
            <inertia ixx="0.012516" ixy="-0.000428" ixz="-0.001196" iyy="0.010027" iyz="-0.000741" izz="0.004815" />
        </inertial>
    </link>
    <!-- sub-link defining coarse geometries of real robot's internal self-collision -->
    <link name="panda_link7_sc" />
    <!-- fixed joint between both sub-links -->
    <joint name="panda_link7_sc_joint" type="fixed">
        <origin rpy="0 0 0.7853981633974483" />
        <parent link="panda_link7" />
        <child link="panda_link7_sc" />
    </joint>
    <joint name="panda_joint7" type="revolute">
        <origin rpy="1.5707963267948966 0 0" xyz="0.088 0 0" />
        <parent link="panda_link6" />
        <child link="panda_link7" />
        <axis xyz="0 0 1" />
        <limit effort="12.0" lower="-2.8973" upper="2.8973" velocity="2.61" />
        <safety_controller k_position="100.0" k_velocity="40.0" soft_lower_limit="-2.8973" soft_upper_limit="2.8973" />
        <dynamics D="1" K="7000" damping="0.003" friction="0.0" mu_coulomb="0" mu_viscous="16" />
    </joint>
    <link name="panda_link8" />
    <joint name="panda_joint8" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0.107" />
        <parent link="panda_link7" />
        <child link="panda_link8" />
    </joint>
    <joint name="panda_hand_joint" type="fixed">
        <parent link="panda_link8" />
        <child link="panda_hand" />
        <origin rpy="0 0 -0.7853981633974483" xyz="0 0 0" />
    </joint>
    <!-- sub-link defining detailed meshes for collision with environment -->
    <link name="panda_hand">
        <visual>
            <geometry>
                <mesh filename="package://franka_description/meshes/visual/hand.dae" />
            </geometry>
        </visual>
        <collision>
            <geometry>
                <mesh filename="package://franka_description/meshes/collision/hand.stl" />
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="-0.01 0 0.03" />
            <mass value="0.73" />
            <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.0025" iyz="0" izz="0.0017" />
        </inertial>
    </link>
    <!-- sub-link defining coarse geometries of real robot's internal self-collision -->
    <link name="panda_hand_sc" />
    <!-- fixed joint between both sub-links -->
    <joint name="panda_hand_sc_joint" type="fixed">
        <origin rpy="0 0 0" />
        <parent link="panda_hand" />
        <child link="panda_hand_sc" />
    </joint>
    <!-- Define the hand_tcp frame -->
    <link name="panda_hand_tcp" />
    <joint name="panda_hand_tcp_joint" type="fixed">
        <origin rpy="0 0 0" xyz="0 0 0.1034" />
        <parent link="panda_hand" />
        <child link="panda_hand_tcp" />
    </joint>
    <link name="panda_leftfinger">
        <visual>
            <geometry>
                <mesh filename="package://franka_description/meshes/visual/finger.dae" />
            </geometry>
        </visual>
        <!-- screw mount -->
        <collision>
            <origin rpy="0 0 0" xyz="0 18.5e-3 11e-3" />
            <geometry>
                <box size="22e-3 15e-3 20e-3" />
            </geometry>
        </collision>
        <!-- cartriage sledge -->
        <collision>
            <origin rpy="0 0 0" xyz="0 6.8e-3 2.2e-3" />
            <geometry>
                <box size="22e-3 8.8e-3 3.8e-3" />
            </geometry>
        </collision>
        <!-- diagonal finger -->
        <collision>
            <origin rpy="0.5235987755982988 0 0" xyz="0 15.9e-3 28.35e-3" />
            <geometry>
                <box size="17.5e-3 7e-3 23.5e-3" />
            </geometry>
        </collision>
        <!-- rubber tip with which to grasp -->
        <collision>
            <origin rpy="0 0 0" xyz="0 7.58e-3 45.25e-3" />
            <geometry>
                <box size="17.5e-3 15.2e-3 18.5e-3" />
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <mass value="0.015" />
            <inertia ixx="2.3749999999999997e-06" ixy="0" ixz="0" iyy="2.3749999999999997e-06" iyz="0" izz="7.5e-07" />
        </inertial>
    </link>
    <link name="panda_rightfinger">
        <visual>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://franka_description/meshes/visual/finger.dae" />
            </geometry>
        </visual>
        <!-- screw mount -->
        <collision>
            <origin rpy="0 0 0" xyz="0 -18.5e-3 11e-3" />
            <geometry>
                <box size="22e-3 15e-3 20e-3" />
            </geometry>
        </collision>
        <!-- cartriage sledge -->
        <collision>
            <origin rpy="0 0 0" xyz="0 -6.8e-3 2.2e-3" />
            <geometry>
                <box size="22e-3 8.8e-3 3.8e-3" />
            </geometry>
        </collision>
        <!-- diagonal finger -->
        <collision>
            <origin rpy="-0.5235987755982988 0 0" xyz="0 -15.9e-3 28.35e-3" />
            <geometry>
                <box size="17.5e-3 7e-3 23.5e-3" />
            </geometry>
        </collision>
        <!-- rubber tip with which to grasp -->
        <collision>
            <origin rpy="0 0 0" xyz="0 -7.58e-3 45.25e-3" />
            <geometry>
                <box size="17.5e-3 15.2e-3 18.5e-3" />
            </geometry>
        </collision>
        <inertial>
            <origin rpy="0 0 0" xyz="0 0 0" />
            <mass value="0.015" />
            <inertia ixx="2.3749999999999997e-06" ixy="0" ixz="0" iyy="2.3749999999999997e-06" iyz="0" izz="7.5e-07" />
        </inertial>
    </link>
    <joint name="panda_finger_joint1" type="prismatic">
        <parent link="panda_hand" />
        <child link="panda_leftfinger" />
        <origin rpy="0 0 0" xyz="0 0 0.0584" />
        <axis xyz="0 1 0" />
        <limit effort="100" lower="0.0" upper="0.04" velocity="0.2" />
        <dynamics damping="0.3" />
    </joint>
    <joint name="panda_finger_joint2" type="prismatic">
        <parent link="panda_hand" />
        <child link="panda_rightfinger" />
        <origin rpy="0 0 0" xyz="0 0 0.0584" />
        <axis xyz="0 -1 0" />
        <limit effort="100" lower="0.0" upper="0.04" velocity="0.2" />
        <mimic joint="panda_finger_joint1" />
        <dynamics damping="0.3" />
    </joint>
    <!-- Intel Realsense -->
    <!--
    <xacro:sensor_r430 prefix="$(arg prefix)wrist_rgbd" parent="$(arg prefix)arm_tool0" prefix_topic="wrist_rgbd">
      <origin xyz="-0.075 0.0 0.065" rpy="0 ${-pi/2} 0"/>
    </xacro:sensor_r430>
    -->
    <gazebo reference="panda_joint1">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint1_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint1">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint1_motor">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint2">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint2_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint2">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint2_motor">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint3">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint3_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint3">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint3_motor">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint4">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint4_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint4">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint4_motor">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint5">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint5_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint5">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint5_motor">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint6">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint6_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint6">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint6_motor">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint7">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint7_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint7">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint7_motor">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint1">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint1_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint1">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint1_motor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint2">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint2_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint2">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint2_motor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint3">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint3_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint3">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint3_motor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint4">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint4_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint4">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint4_motor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint5">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint5_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint5">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint5_motor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint6">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint6_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint6">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint6_motor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint7">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint7_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint7">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint7_motor">
            <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint1">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint1_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint1">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint1_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint2">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint2_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint2">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint2_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint3">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint3_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint3">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint3_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint4">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint4_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint4">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint4_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint5">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint5_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint5">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint5_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint6">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint6_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint6">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint6_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <gazebo reference="panda_joint7">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_joint7_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_joint7">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_joint7_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <gazebo reference="panda_finger_joint1">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_finger_joint1_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_finger_joint1">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_finger_joint1_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <gazebo reference="panda_finger_joint2">
        <!-- Needed for ODE to output external wrenches on joints -->
        <provideFeedback>true</provideFeedback>
    </gazebo>
    <transmission name="panda_finger_joint2_transmission">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="panda_finger_joint2">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="panda_finger_joint2_motor">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            <mechanicalReduction>1</mechanicalReduction>
        </actuator>
    </transmission>
    <gazebo reference="panda_leftfinger">
        <collision>
            <max_contacts>10</max_contacts>
            <surface>
                <contact>
                    <ode>
                        <!-- These two parameter need application specific tuning. -->
                        <!-- Usually you want no "snap out" velocity and a generous -->
                        <!-- penetration depth to keep the grasping stable -->
                        <max_vel>0</max_vel>
                        <min_depth>0.001</min_depth>
                    </ode>
                </contact>
                <friction>
                    <ode>
                        <mu>1.13</mu>
                        <mu2>1.13</mu2>
                    </ode>
                </friction>
                <bounce />
            </surface>
        </collision>
    </gazebo>
    <gazebo reference="panda_rightfinger">
        <collision>
            <max_contacts>10</max_contacts>
            <surface>
                <contact>
                    <ode>
                        <!-- These two parameter need application specific tuning. -->
                        <!-- Usually you want no "snap out" velocity and a generous -->
                        <!-- penetration depth to keep the grasping stable -->
                        <max_vel>0</max_vel>
                        <min_depth>0.001</min_depth>
                    </ode>
                </contact>
                <friction>
                    <ode>
                        <mu>1.13</mu>
                        <mu2>1.13</mu2>
                    </ode>
                </friction>
                <bounce />
            </surface>
        </collision>
    </gazebo>
    <gazebo>
        <plugin filename="libgazebo_ros_control.so" name="ros_control">
            <robotParam>robot_description</robotParam>
            <controlPeriod>0.001</controlPeriod>
            <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
            <legacyModeNS>true</legacyModeNS>
        </plugin>
    </gazebo>
</robot>

